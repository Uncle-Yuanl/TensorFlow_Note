{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.1.0\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import os\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 模型保存与部署的流程：\n",
    "# 1、将所有的东西先转为concrete function\n",
    "# 2、将concrete function 转为tflite\n",
    "# 但是现在框架下，saved_model和keras模型也可以直接转为tflite\n",
    "\n",
    "# keras模型转换为concrete function\n",
    "loaded_keras_model = tf.saved_model.load(\n",
    "    \"./graph_def_and_weights/fashion_mnist_model.h5\")\n",
    "loaded_keras_model(np.ones((1, 28, 28)))\n",
    "# 用tf.function封装\n",
    "run_model = tf.function(lambda x : loaded_keras_model(x))\n",
    "keras_concrete_func = run_model.get_concrete_function(\n",
    "    tf.TensorSpec(loaded_keras_model.inputs[0].shape,\n",
    "                  loaded_keras.model.inputs[0].dtype))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "keras_concrete_func(tf.constant(np.ones((1, 28, 28), dtype=np.float32)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# saved_model 转 concrete function\n",
    "# 聚变函数：inference，从saved_model中的signatures（字典）中得到\n",
    "# signatures中每个key对应的value就是一个concrete function\n",
    "# 这个inference就是一个concrete function"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
